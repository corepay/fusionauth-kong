version: '3.7'

# volumes:
#   dbserver_data: {}

networks:
  kong-net:
    external: false
  
services:

  db_server:
    image: postgres:9.6
    restart: always
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    ports:
      - "5432:5432"
    secrets:
      - postgres_password
    healthcheck:
      test: ["CMD", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - kong-net
    # volumes:
    #   - dbserver_data:/var/lib/postgresql/data

  # kong-migration:
  #   image: kong
  #   container_name: kong-migration
  #   depends_on:
  #     - db_server
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: db_server
  #     KONG_PG_PORT: 5432      
  #     KONG_PG_DATABASE: kong
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD_FILE: /run/secrets/postgres_password
  #   secrets:
  #     - postgres_password
  #   # environment:
  #   #   - KONG_DATABASE=postgres
  #   #   - KONG_PG_HOST=db_server
  #   #   - KONG_PG_PASSWORD=sa123*
  #   #   - KONG_PG_DATABASE=kong
  #   #   - KONG_PG_PORT=5432
  #   networks:
  #     - kong-net
  #   restart: on-failure
  #   command: kong migrations bootstrap

  # kong-migrations-up:
  #   image: "kong:latest"
  #   container_name: kong-migration-up
  #   depends_on:
  #     - db_server
  #     - kong-migration
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: db_server
  #     KONG_PG_PORT: 5432      
  #     KONG_PG_DATABASE: kong
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD_FILE: /run/secrets/postgres_password
  #   secrets:
  #     - postgres_password
  #   networks:
  #     - kong-net
  #   restart: on-failure
  #   command: kong migrations up && kong migrations finish

  # kong:
  #   image: "kong:latest"
  #   user: "${KONG_USER:-kong}"
  #   depends_on:
  #     - db_server
  #     - kong-migration
  #     - kong-migrations-up
  #   environment:
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: '0.0.0.0:8001'
  #     KONG_CASSANDRA_CONTACT_POINTS: db_server
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: db_server
  #     KONG_PG_PORT: 5432      
  #     KONG_PG_DATABASE: kong
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD_FILE: /run/secrets/postgres_password
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #   secrets:
  #     - postgres_password
  #   networks:
  #     - kong-net
  #   ports:
  #     - "8000:8000/tcp"
  #     - "8001:8001/tcp"
  #     - "8443:8443/tcp"
  #     - "8444:8444/tcp"
  #   healthcheck:
  #     test: ["CMD", "kong", "health"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  #   restart: on-failure

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:sa123*@db_server:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - db_server
    depends_on:
      - db_server

  #######################################
  # Konga
  #######################################
  konga:
    image: pantsel/konga
    environment:
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_ADAPTER: postgres
      DB_HOST: db_server
      DB_PORT: 5432
      DB_DATABASE: konga_db
      DB_USER: kong
      DB_PASSWORD: sa123*
      NODE_ENV: development
      KONGA_HOOK_TIMEOUT: 10000
    secrets:
      - postgres_password
    restart: on-failure
    ports:
      - 1337:1337
    depends_on:
      - db_server
      - konga-prepare
    networks:
      - kong-net

secrets:
  postgres_password:
    file: ./POSTGRES_PASSWORD